{"version":3,"sources":["components/Header/Header.jsx","components/Total/Total.jsx","components/History/HistoryItem.jsx","components/History/History.jsx","components/Operation/OperationForm.jsx","components/Operation/Operation.jsx","components/Main/Main.jsx","App.js","index.js"],"names":["Header","Total","props","className","balance","income","expenses","HistoryItem","transaction","add","description","amount","onClick","deleteTransaction","id","History","transactions","map","item","key","OperationForm","onChange","addDescription","type","placeholder","addAmount","addTransaction","Operation","Main","App","state","JSON","parse","localStorage","getItem","e","setState","target","value","Number","computeIncome","reduce","total","computeExpenses","computeBalance","incomeRes","expensesRes","totalBalance","Date","toString","push","addToStorage","setItem","stringify","filter","this","nextProps","nextState","nextContext","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bde43062.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1>Кошелек</h1>\r\n            <h2>Калькулятор расходов</h2>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Total = (props) => {\r\n    return (\r\n        <section className=\"total\">\r\n            <header className=\"total__header\">\r\n                <h3>Баланс</h3>\r\n                <p className=\"total__balance\">{props.balance} ₽</p>\r\n            </header>\r\n            <div className=\"total__main\">\r\n                <div className=\"total__main-item total__income\">\r\n                    <h4>Доходы</h4>\r\n                    <p className=\"total__money total__money-income\">\r\n                        +{props.income} ₽\r\n                    </p>\r\n                </div>\r\n                <div className=\"total__main-item total__expenses\">\r\n                    <h4>Расходы</h4>\r\n                    <p className=\"total__money total__money-expenses\">\r\n                        -{props.expenses} ₽\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Total;\r\n","import React from \"react\";\r\n\r\nconst HistoryItem = (props) => {\r\n    return (\r\n        <li className={`history__item  ${props.transaction.add ? \"history__item-plus\" : \"history__item-minus\"}`}>{props.transaction.description}\r\n            <span className=\"history__money\">{props.transaction.amount} ₽</span>\r\n            <button className=\"history__delete\" onClick={() => props.deleteTransaction(props.transaction.id)}>x</button>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default HistoryItem;\r\n","import React from \"react\";\r\nimport HistoryItem from \"./HistoryItem\";\r\n\r\nconst History = (props) => {\r\n    return (\r\n        <section className=\"history\">\r\n            <h3>История расходов</h3>\r\n            <ul className=\"history__list\">\r\n                {props.transactions.map(item => <HistoryItem deleteTransaction={props.deleteTransaction} key={item.id} transaction={item}/>)}\r\n            </ul>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default History;\r\n","import React from \"react\";\r\n\r\nconst OperationForm = (props) => {\r\n    return (\r\n        <form id=\"form\">\r\n            <label>\r\n                <input onChange={props.addDescription} type=\"text\" className=\"operation__fields operation__name\"\r\n                       placeholder=\"Наименование операции\"/>\r\n            </label>\r\n            <label>\r\n                <input onChange={props.addAmount} type=\"number\" className=\"operation__fields operation__amount\" placeholder=\"Введите сумму\"/>\r\n            </label>\r\n            <div className=\"operation__btns\">\r\n                <button\r\n                    onClick={() => props.addTransaction(false)}\r\n                    type=\"button\"\r\n                    className=\"operation__btn operation__btn-subtract\">РАСХОД</button>\r\n                <button\r\n                    onClick={() => props.addTransaction(true)}\r\n                    type=\"button\"\r\n                    className=\"operation__btn operation__btn-add\">ДОХОД</button>\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default OperationForm;\r\n","import React from \"react\";\r\nimport OperationForm from \"./OperationForm\";\r\n\r\nconst Operation = (props) => {\r\n    return (\r\n        <section className=\"operation\">\r\n            <h3>Новая операция</h3>\r\n            <OperationForm addDescription={props.addDescription}\r\n                           addAmount={props.addAmount}\r\n                           addTransaction={props.addTransaction}/>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Operation;\r\n","import React from \"react\";\r\nimport Total from \"../Total/Total\";\r\nimport History from \"../History/History\";\r\nimport Operation from \"../Operation/Operation\";\r\n\r\nconst Main = (props) => {\r\n    return (\r\n        <main>\r\n            <div className=\"container\">\r\n                <Total  expenses={props.expenses} income={props.income} balance={props.balance}/>\r\n                <History deleteTransaction={props.deleteTransaction} transactions={props.transactions}/>\r\n                <Operation addAmount={props.addAmount}\r\n                           addDescription={ props.addDescription}\r\n                           addTransaction={props.addTransaction}/>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport Main from \"./components/Main/Main\";\n\nexport default class App extends Component {\n    state = {\n      transactions: JSON.parse(localStorage.getItem('calcMoney')) || [],\n        description: '',\n        amount: 0,\n        balance: 0,\n        income: 0,\n        expenses: 0\n    };\n\n    componentWillMount() {\n        this.computeBalance();\n    }\n\n    componentWillUpdate(nextProps, nextState, nextContext) {\n        this.addToStorage();\n    }\n\n    //Добавление описания к транзакции\n    addDescription = (e) => {\n        this.setState({\n            description: e.target.value\n        })\n    };\n\n    //Ввод суммы расхода/дохода\n    addAmount = (e) => {\n        this.setState({\n            amount: Number(e.target.value)\n        })\n    };\n\n    //Подсчет доходов\n    computeIncome = () => {\n        return this.state.transactions\n            .reduce((total, item) => item.add ? total + item.amount:total, 0)\n    };\n\n    //Подсчет расходов\n    computeExpenses = () => {\n        return this.state.transactions\n            .reduce((total, item) => !item.add ? total + item.amount:total, 0)\n    };\n\n    //Подсчет всего баланса с доходами и расходами\n    computeBalance = () => {\n        const incomeRes = this.computeIncome();\n        const expensesRes = this.computeExpenses();\n\n        const totalBalance = incomeRes - expensesRes;\n\n        this.setState({\n            income: incomeRes,\n            expenses: expensesRes,\n            balance: totalBalance\n        })\n    };\n\n    //Добавление транзакции\n    addTransaction =(add) => {\n      const transactions = [...this.state.transactions];\n\n      const  transaction = {\n          id: `cmr${(+new Date()).toString(16)}`,\n          description: this.state.description,\n          amount: this.state.amount,\n          income: this.state.income,\n          expenses: this.state.expenses,\n          add\n      };\n\n      transactions.push(transaction);\n\n      //Добавление транзакции в state и подсчет баланса\n      this.setState({\n          transactions,\n      }, this.computeBalance);\n    };\n\n    //Добавление транзакций в localStorage\n    addToStorage = () => {\n      localStorage.setItem('calcMoney', JSON.stringify(this.state.transactions))\n    };\n\n    //Удаление транзакции\n    deleteTransaction = (key) => {\n        const transactions = this.state.transactions.filter(item => item.id !== key);\n        this.setState({transactions}, this.computeBalance)\n    };\n\n    render() {\n        return (\n            <>\n                <Header/>\n                <Main transactions={this.state.transactions}\n                      addAmount={this.addAmount}\n                      addDescription={this.addDescription}\n                      addTransaction={this.addTransaction}\n                      deleteTransaction={this.deleteTransaction}\n                      balance={this.state.balance}\n                      income={this.state.income}\n                      expenses={this.state.expenses}/>\n            </>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./normalize.css\";\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}